{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
		"name": "Messaging App API",
		"description": "Complete API collection for the Django Messaging App with JWT authentication, pagination, and filtering",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"testpassword123\",\n    \"first_name\": \"Test\",\n    \"last_name\": \"User\",\n    \"phone_number\": \"+1234567890\",\n    \"role\": \"guest\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"register",
								""
							]
						},
						"description": "Register a new user with email, password, and personal information"
					},
					"response": []
				},
				{
					"name": "Login User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"testpassword123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login",
								""
							]
						},
						"description": "Login user and get JWT access and refresh tokens"
					},
					"response": []
				},
				{
					"name": "Get JWT Tokens",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"testpassword123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/token/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"token",
								""
							]
						},
						"description": "Get JWT access and refresh tokens (alternative to login)"
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/token/refresh/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"token",
								"refresh",
								""
							]
						},
						"description": "Refresh JWT access token using refresh token"
					},
					"response": []
				},
				{
					"name": "Logout User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/logout/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"logout",
								""
							]
						},
						"description": "Logout user and blacklist refresh token"
					},
					"response": []
				},
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/profile/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"profile",
								""
							]
						},
						"description": "Get current user's profile information"
					},
					"response": []
				},
				{
					"name": "Update User Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Updated\",\n    \"last_name\": \"Name\",\n    \"phone_number\": \"+9876543210\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/profile/update/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"profile",
								"update",
								""
							]
						},
						"description": "Update current user's profile information"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for user registration, login, token management, and profile operations"
		},
		{
			"name": "Conversations",
			"item": [
				{
					"name": "List Conversations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/conversations/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"conversations",
								""
							]
						},
						"description": "Get all conversations for the authenticated user with pagination"
					},
					"response": []
				},
				{
					"name": "Create Conversation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"participants_id\": \"{{user_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/conversations/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"conversations",
								""
							]
						},
						"description": "Create a new conversation"
					},
					"response": []
				},
				{
					"name": "Get Conversation by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/conversations/{{conversation_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"conversations",
								"{{conversation_id}}",
								""
							]
						},
						"description": "Get a specific conversation by ID"
					},
					"response": []
				},
				{
					"name": "Update Conversation",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"participants_id\": \"{{user_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/conversations/{{conversation_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"conversations",
								"{{conversation_id}}",
								""
							]
						},
						"description": "Update a conversation (PUT method)"
					},
					"response": []
				},
				{
					"name": "Partial Update Conversation",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"participants_id\": \"{{user_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/conversations/{{conversation_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"conversations",
								"{{conversation_id}}",
								""
							]
						},
						"description": "Partially update a conversation (PATCH method)"
					},
					"response": []
				},
				{
					"name": "Delete Conversation",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/conversations/{{conversation_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"conversations",
								"{{conversation_id}}",
								""
							]
						},
						"description": "Delete a conversation (DELETE method)"
					},
					"response": []
				},
				{
					"name": "Filter Conversations by Participant",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/conversations/?participant={{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"conversations",
								""
							],
							"query": [
								{
									"key": "participant",
									"value": "{{user_id}}"
								}
							]
						},
						"description": "Filter conversations by participant"
					},
					"response": []
				},
				{
					"name": "Search Conversations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/conversations/?search=test",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"conversations",
								""
							],
							"query": [
								{
									"key": "search",
									"value": "test"
								}
							]
						},
						"description": "Search conversations by participant name or email"
					},
					"response": []
				}
			],
			"description": "Conversation management endpoints with CRUD operations, filtering, and search"
		},
		{
			"name": "Messages",
			"item": [
				{
					"name": "List Messages",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/messages/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"messages",
								""
							]
						},
						"description": "Get all messages for the authenticated user with pagination"
					},
					"response": []
				},
				{
					"name": "Create Message",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"conversation\": \"{{conversation_id}}\",\n    \"message_body\": \"Hello, this is a test message!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/messages/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"messages",
								""
							]
						},
						"description": "Send a new message to a conversation"
					},
					"response": []
				},
				{
					"name": "Get Message by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/messages/{{message_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"messages",
								"{{message_id}}",
								""
							]
						},
						"description": "Get a specific message by ID"
					},
					"response": []
				},
				{
					"name": "Update Message",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"conversation\": \"{{conversation_id}}\",\n    \"message_body\": \"Updated message content\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/messages/{{message_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"messages",
								"{{message_id}}",
								""
							]
						},
						"description": "Update a message (PUT method)"
					},
					"response": []
				},
				{
					"name": "Partial Update Message",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message_body\": \"Partially updated message content\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/messages/{{message_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"messages",
								"{{message_id}}",
								""
							]
						},
						"description": "Partially update a message (PATCH method)"
					},
					"response": []
				},
				{
					"name": "Delete Message",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/messages/{{message_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"messages",
								"{{message_id}}",
								""
							]
						},
						"description": "Delete a message (DELETE method)"
					},
					"response": []
				},
				{
					"name": "Filter Messages by Content",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/messages/?message_contains=test",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"messages",
								""
							],
							"query": [
								{
									"key": "message_contains",
									"value": "test"
								}
							]
						},
						"description": "Filter messages by content containing specific text"
					},
					"response": []
				},
				{
					"name": "Filter Messages by Sender",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/messages/?sender={{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"messages",
								""
							],
							"query": [
								{
									"key": "sender",
									"value": "{{user_id}}"
								}
							]
						},
						"description": "Filter messages by sender"
					},
					"response": []
				},
				{
					"name": "Filter Messages by Date Range",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/messages/?sent_after=2024-01-01T00:00:00Z&sent_before=2024-12-31T23:59:59Z",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"messages",
								""
							],
							"query": [
								{
									"key": "sent_after",
									"value": "2024-01-01T00:00:00Z"
								},
								{
									"key": "sent_before",
									"value": "2024-12-31T23:59:59Z"
								}
							]
						},
						"description": "Filter messages by date range"
					},
					"response": []
				},
				{
					"name": "Search Messages",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/messages/?search=hello",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"messages",
								""
							],
							"query": [
								{
									"key": "search",
									"value": "hello"
								}
							]
						},
						"description": "Search messages by content"
					},
					"response": []
				},
				{
					"name": "Order Messages by Date",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/messages/?ordering=-sent_at",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"messages",
								""
							],
							"query": [
								{
									"key": "ordering",
									"value": "-sent_at"
								}
							]
						},
						"description": "Order messages by sent date (newest first)"
					},
					"response": []
				},
				{
					"name": "Pagination Test",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/messages/?page=1&page_size=5",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"messages",
								""
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page_size",
									"value": "5"
								}
							]
						},
						"description": "Test pagination with custom page size"
					},
					"response": []
				},
				{
					"name": "Get Recent Messages",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/messages/recent/?limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"messages",
								"recent",
								""
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Get recent messages with limit"
					},
					"response": []
				},
				{
					"name": "Get Messages by Conversation",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/messages/by_conversation/?conversation_id={{conversation_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"messages",
								"by_conversation",
								""
							],
							"query": [
								{
									"key": "conversation_id",
									"value": "{{conversation_id}}"
								}
							]
						},
						"description": "Get messages for a specific conversation"
					},
					"response": []
				}
			],
			"description": "Message management endpoints with CRUD operations, filtering, search, and pagination"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "List Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								""
							]
						},
						"description": "Get all users (admin only or own profile)"
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/{{user_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}",
								""
							]
						},
						"description": "Get a specific user by ID"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Updated\",\n    \"last_name\": \"User\",\n    \"phone_number\": \"+9876543210\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/{{user_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}",
								""
							]
						},
						"description": "Update a user (PUT method)"
					},
					"response": []
				},
				{
					"name": "Partial Update User",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"phone_number\": \"+1111111111\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/{{user_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}",
								""
							]
						},
						"description": "Partially update a user (PATCH method)"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/{{user_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}",
								""
							]
						},
						"description": "Delete a user (DELETE method)"
					},
					"response": []
				}
			],
			"description": "User management endpoints with CRUD operations"
		},
		{
			"name": "Security Tests",
			"item": [
				{
					"name": "Unauthorized Access Test",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/conversations/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"conversations",
								""
							]
						},
						"description": "Test unauthorized access (should return 401)"
					},
					"response": []
				},
				{
					"name": "Cross-User Access Test",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{other_user_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/conversations/{{conversation_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"conversations",
								"{{conversation_id}}",
								""
							]
						},
						"description": "Test cross-user access (should return 404)"
					},
					"response": []
				},
				{
					"name": "Invalid Token Test",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer invalid_token_here"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/messages/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"messages",
								""
							]
						},
						"description": "Test with invalid token (should return 401)"
					},
					"response": []
				}
			],
			"description": "Security tests to verify authentication and authorization"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set base URL if not already set",
					"if (!pm.environment.get('base_url')) {",
					"    pm.environment.set('base_url', 'http://127.0.0.1:8000');",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-extract tokens from login responses",
					"if (pm.response.json().access) {",
					"    pm.environment.set('access_token', pm.response.json().access);",
					"}",
					"if (pm.response.json().refresh) {",
					"    pm.environment.set('refresh_token', pm.response.json().refresh);",
					"}",
					"if (pm.response.json().user && pm.response.json().user.user_id) {",
					"    pm.environment.set('user_id', pm.response.json().user.user_id);",
					"}",
					"",
					"// Auto-extract conversation and message IDs",
					"if (pm.response.json().conversation_id) {",
					"    pm.environment.set('conversation_id', pm.response.json().conversation_id);",
					"}",
					"if (pm.response.json().message_id) {",
					"    pm.environment.set('message_id', pm.response.json().message_id);",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://127.0.0.1:8000",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "refresh_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "conversation_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "message_id",
			"value": "",
			"type": "string"
		}
	]
}
